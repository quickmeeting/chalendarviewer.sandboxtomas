<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sf.net/ruleset/1.0.0" name="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">
   <description/>
   <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
   <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators"/>
   <rule ref="rulesets/basic.xml/AvoidThreadGroup"/>
   <rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP"/>
   <rule ref="rulesets/basic.xml/AvoidUsingOctalValues"/>
   <rule ref="rulesets/basic.xml/BigIntegerInstantiation"/>
   <rule ref="rulesets/basic.xml/BooleanInstantiation"/>
   <rule ref="rulesets/basic.xml/BrokenNullCheck"/>
   <rule ref="rulesets/basic.xml/CheckResultSet"/>
   <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray"/>
   <rule ref="rulesets/basic.xml/CollapsibleIfStatements"/>
   <rule ref="rulesets/basic.xml/DoubleCheckedLocking"/>
   <rule ref="rulesets/basic.xml/EmptyCatchBlock"/>
   <rule ref="rulesets/basic.xml/EmptyFinallyBlock"/>
   <rule ref="rulesets/basic.xml/EmptyIfStmt"/>
   <rule ref="rulesets/basic.xml/EmptyInitializer"/>
   <rule ref="rulesets/basic.xml/EmptyStatementNotInLoop"/>
   <rule ref="rulesets/basic.xml/EmptyStaticInitializer"/>
   <rule ref="rulesets/basic.xml/EmptySwitchStatements"/>
   <rule ref="rulesets/basic.xml/EmptySynchronizedBlock"/>
   <rule ref="rulesets/basic.xml/EmptyTryBlock"/>
   <rule ref="rulesets/basic.xml/EmptyWhileStmt"/>
   <rule ref="rulesets/basic.xml/ForLoopShouldBeWhileLoop"/>
   <rule ref="rulesets/basic.xml/JumbledIncrementer"/>
   <rule ref="rulesets/basic.xml/MisplacedNullCheck"/>
   <rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode"/>
   <rule ref="rulesets/basic.xml/ReturnFromFinallyBlock"/>
   <rule ref="rulesets/basic.xml/UnconditionalIfStatement"/>
   <rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary"/>
   <rule ref="rulesets/basic.xml/UnnecessaryFinalModifier"/>
   <rule ref="rulesets/basic.xml/UnnecessaryReturn"/>
   <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals"/>
   <rule ref="rulesets/basic.xml/UselessOperationOnImmutable"/>
   <rule ref="rulesets/basic.xml/UselessOverridingMethod"/>
   <rule ref="rulesets/braces.xml/ForLoopsMustUseBraces"/>
   <rule ref="rulesets/braces.xml/IfElseStmtsMustUseBraces"/>
   <rule ref="rulesets/braces.xml/IfStmtsMustUseBraces"/>
   <rule ref="rulesets/braces.xml/WhileLoopsMustUseBraces"/>
   <rule ref="rulesets/typeresolution.xml/CloneMethodMustImplementCloneable"/>
   <rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException"/>
   <rule ref="rulesets/clone.xml/ProperCloneImplementation"/>
   <rule ref="rulesets/finalizers.xml/AvoidCallingFinalize"/>
   <rule ref="rulesets/finalizers.xml/EmptyFinalizer"/>
   <rule ref="rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize"/>
   <rule ref="rulesets/finalizers.xml/FinalizeOnlyCallsSuperFinalize"/>
   <rule ref="rulesets/finalizers.xml/FinalizeOverloaded"/>
   <rule ref="rulesets/finalizers.xml/FinalizeShouldBeProtected"/>
   <rule ref="rulesets/imports.xml/DontImportJavaLang"/>
   <rule ref="rulesets/imports.xml/DuplicateImports"/>
   <rule ref="rulesets/imports.xml/ImportFromSamePackage"/>
   <rule ref="rulesets/imports.xml/TooManyStaticImports"/>
   <rule ref="rulesets/typeresolution.xml/UnusedImports"/>
   <rule ref="rulesets/logging-java.xml/AvoidPrintStackTrace"/>
   <rule ref="rulesets/logging-java.xml/LoggerIsNotStaticFinal"/>
   <rule ref="rulesets/logging-java.xml/MoreThanOneLogger"/>
   <rule ref="rulesets/logging-java.xml/SystemPrintln"/>
   <rule ref="rulesets/junit.xml/JUnitAssertionsShouldIncludeMessage"/>
   <rule ref="rulesets/junit.xml/JUnitSpelling"/>
   <rule ref="rulesets/junit.xml/JUnitStaticSuite"/>
   <rule ref="rulesets/junit.xml/JUnitTestsShouldIncludeAssert"/>
   <rule ref="rulesets/junit.xml/SimplifyBooleanAssertion"/>
   <rule ref="rulesets/junit.xml/TestClassWithoutTestCases"/>
   <rule ref="rulesets/junit.xml/UnnecessaryBooleanAssertion"/>
   <rule ref="rulesets/junit.xml/UseAssertEqualsInsteadOfAssertTrue"/>
   <rule ref="rulesets/junit.xml/UseAssertNullInsteadOfAssertTrue"/>
   <rule ref="rulesets/junit.xml/UseAssertSameInsteadOfAssertTrue"/>
   <rule ref="rulesets/naming.xml/AvoidDollarSigns"/>
   <rule ref="rulesets/naming.xml/AvoidFieldNameMatchingMethodName"/>
   <rule ref="rulesets/naming.xml/AvoidFieldNameMatchingTypeName"/>
   <rule ref="rulesets/naming.xml/BooleanGetMethodName"/>
   <rule ref="rulesets/naming.xml/ClassNamingConventions"/>
   <rule ref="rulesets/naming.xml/MethodNamingConventions"/>
   <rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass"/>
   <rule ref="rulesets/naming.xml/MisleadingVariableName"/>
   <rule ref="rulesets/naming.xml/NoPackage"/>
   <rule ref="rulesets/naming.xml/PackageCase"/>
   <rule ref="rulesets/naming.xml/SuspiciousConstantFieldName"/>
   <rule ref="rulesets/naming.xml/SuspiciousEqualsMethodName"/>
   <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName"/>
</ruleset>
